# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T11:19:33+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, confloat, conint, constr


class ActionOnFailure(Enum):
    TERMINATE_JOB_FLOW = 'TERMINATE_JOB_FLOW'
    TERMINATE_CLUSTER = 'TERMINATE_CLUSTER'
    CANCEL_AND_WAIT = 'CANCEL_AND_WAIT'
    CONTINUE = 'CONTINUE'


class AddTagsOutput(BaseModel):
    pass


class AdjustmentType(Enum):
    CHANGE_IN_CAPACITY = 'CHANGE_IN_CAPACITY'
    PERCENT_CHANGE_IN_CAPACITY = 'PERCENT_CHANGE_IN_CAPACITY'
    EXACT_CAPACITY = 'EXACT_CAPACITY'


class ArnType(RootModel[constr(min_length=20, max_length=2048)]):
    root: constr(min_length=20, max_length=2048)


class AuthMode(Enum):
    SSO = 'SSO'
    IAM = 'IAM'


class AutoScalingPolicyState(Enum):
    PENDING = 'PENDING'
    ATTACHING = 'ATTACHING'
    ATTACHED = 'ATTACHED'
    DETACHING = 'DETACHING'
    DETACHED = 'DETACHED'
    FAILED = 'FAILED'


class AutoScalingPolicyStateChangeReasonCode(Enum):
    USER_REQUEST = 'USER_REQUEST'
    PROVISION_FAILURE = 'PROVISION_FAILURE'
    CLEANUP_FAILURE = 'CLEANUP_FAILURE'


class Boolean(RootModel[bool]):
    root: bool


class BooleanObject(RootModel[bool]):
    root: bool


class CancelStepsRequestStatus(Enum):
    SUBMITTED = 'SUBMITTED'
    FAILED = 'FAILED'


class ClusterId(RootModel[str]):
    root: str


class ClusterState(Enum):
    STARTING = 'STARTING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    WAITING = 'WAITING'
    TERMINATING = 'TERMINATING'
    TERMINATED = 'TERMINATED'
    TERMINATED_WITH_ERRORS = 'TERMINATED_WITH_ERRORS'


class ClusterStateChangeReasonCode(Enum):
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    INSTANCE_FAILURE = 'INSTANCE_FAILURE'
    INSTANCE_FLEET_TIMEOUT = 'INSTANCE_FLEET_TIMEOUT'
    BOOTSTRAP_FAILURE = 'BOOTSTRAP_FAILURE'
    USER_REQUEST = 'USER_REQUEST'
    STEP_FAILURE = 'STEP_FAILURE'
    ALL_STEPS_COMPLETED = 'ALL_STEPS_COMPLETED'


class ClusterStateList(RootModel[List[ClusterState]]):
    root: List[ClusterState]


class ComparisonOperator(Enum):
    GREATER_THAN_OR_EQUAL = 'GREATER_THAN_OR_EQUAL'
    GREATER_THAN = 'GREATER_THAN'
    LESS_THAN = 'LESS_THAN'
    LESS_THAN_OR_EQUAL = 'LESS_THAN_OR_EQUAL'


class ComputeLimitsUnitType(Enum):
    InstanceFleetUnits = 'InstanceFleetUnits'
    Instances = 'Instances'
    VCPU = 'VCPU'


class Date(RootModel[datetime]):
    root: datetime


class DeleteSecurityConfigurationOutput(BaseModel):
    pass


class DescribeClusterInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')


class ExecutionEngineType(Enum):
    EMR = 'EMR'


class GetAutoTerminationPolicyInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')


class GetBlockPublicAccessConfigurationInput(BaseModel):
    pass


class GetManagedScalingPolicyInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')


class IdentityType(Enum):
    USER = 'USER'
    GROUP = 'GROUP'


class InstanceCollectionType(Enum):
    INSTANCE_FLEET = 'INSTANCE_FLEET'
    INSTANCE_GROUP = 'INSTANCE_GROUP'


class InstanceFleetId(RootModel[str]):
    root: str


class InstanceFleetState(Enum):
    PROVISIONING = 'PROVISIONING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    RESIZING = 'RESIZING'
    SUSPENDED = 'SUSPENDED'
    TERMINATING = 'TERMINATING'
    TERMINATED = 'TERMINATED'


class InstanceFleetStateChangeReasonCode(Enum):
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    INSTANCE_FAILURE = 'INSTANCE_FAILURE'
    CLUSTER_TERMINATED = 'CLUSTER_TERMINATED'


class InstanceFleetTimeline(BaseModel):
    CreationDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None
    ReadyDateTime: Optional[Date] = None


class InstanceFleetType(Enum):
    MASTER = 'MASTER'
    CORE = 'CORE'
    TASK = 'TASK'


class InstanceGroupId(RootModel[str]):
    root: str


class InstanceGroupState(Enum):
    PROVISIONING = 'PROVISIONING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    RECONFIGURING = 'RECONFIGURING'
    RESIZING = 'RESIZING'
    SUSPENDED = 'SUSPENDED'
    TERMINATING = 'TERMINATING'
    TERMINATED = 'TERMINATED'
    ARRESTED = 'ARRESTED'
    SHUTTING_DOWN = 'SHUTTING_DOWN'
    ENDED = 'ENDED'


class InstanceGroupStateChangeReasonCode(Enum):
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    INSTANCE_FAILURE = 'INSTANCE_FAILURE'
    CLUSTER_TERMINATED = 'CLUSTER_TERMINATED'


class InstanceGroupTimeline(BaseModel):
    CreationDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None
    ReadyDateTime: Optional[Date] = None


class InstanceGroupType(Enum):
    MASTER = 'MASTER'
    CORE = 'CORE'
    TASK = 'TASK'


class InstanceGroupTypeList(RootModel[List[InstanceGroupType]]):
    root: List[InstanceGroupType]


class InstanceId(RootModel[str]):
    root: str


class InstanceRoleType(Enum):
    MASTER = 'MASTER'
    CORE = 'CORE'
    TASK = 'TASK'


class InstanceState(Enum):
    AWAITING_FULFILLMENT = 'AWAITING_FULFILLMENT'
    PROVISIONING = 'PROVISIONING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    TERMINATED = 'TERMINATED'


class InstanceStateChangeReasonCode(Enum):
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    INSTANCE_FAILURE = 'INSTANCE_FAILURE'
    BOOTSTRAP_FAILURE = 'BOOTSTRAP_FAILURE'
    CLUSTER_TERMINATED = 'CLUSTER_TERMINATED'


class InstanceStateList(RootModel[List[InstanceState]]):
    root: List[InstanceState]


class InstanceTimeline(BaseModel):
    CreationDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None
    ReadyDateTime: Optional[Date] = None


class InstanceType(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class Integer(RootModel[int]):
    root: int


class InternalServerError(RootModel[Any]):
    root: Any


class InternalServerException(RootModel[Any]):
    root: Any


class InvalidRequestException(RootModel[Any]):
    root: Any


class JobFlowExecutionState(Enum):
    STARTING = 'STARTING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    WAITING = 'WAITING'
    SHUTTING_DOWN = 'SHUTTING_DOWN'
    TERMINATED = 'TERMINATED'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'


class JobFlowExecutionStateList(RootModel[List[JobFlowExecutionState]]):
    root: List[JobFlowExecutionState]


class Long(RootModel[int]):
    root: int


class Marker(RootModel[str]):
    root: str


class MarketType(Enum):
    ON_DEMAND = 'ON_DEMAND'
    SPOT = 'SPOT'


class MaxResultsNumber(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class ModifyClusterOutput(BaseModel):
    StepConcurrencyLevel: Optional[Integer] = None


class NonNegativeDouble(RootModel[confloat(ge=0.0)]):
    root: confloat(ge=0.0)


class NotebookExecutionStatus(Enum):
    START_PENDING = 'START_PENDING'
    STARTING = 'STARTING'
    RUNNING = 'RUNNING'
    FINISHING = 'FINISHING'
    FINISHED = 'FINISHED'
    FAILING = 'FAILING'
    FAILED = 'FAILED'
    STOP_PENDING = 'STOP_PENDING'
    STOPPING = 'STOPPING'
    STOPPED = 'STOPPED'


class OnDemandCapacityReservationPreference(Enum):
    open = 'open'
    none = 'none'


class OnDemandCapacityReservationUsageStrategy(Enum):
    use_capacity_reservations_first = 'use-capacity-reservations-first'


class OnDemandProvisioningAllocationStrategy(Enum):
    lowest_price = 'lowest-price'


class OptionalArnType(RootModel[constr(min_length=0, max_length=2048)]):
    root: constr(min_length=0, max_length=2048)


class PlacementGroupStrategy(Enum):
    SPREAD = 'SPREAD'
    PARTITION = 'PARTITION'
    CLUSTER = 'CLUSTER'
    NONE = 'NONE'


class Port(RootModel[conint(ge=-1, le=65535)]):
    root: conint(ge=-1, le=65535)


class PortRange(BaseModel):
    MaxRange: Optional[Port] = None
    MinRange: Port


class PortRanges(RootModel[List[PortRange]]):
    root: List[PortRange]


class PutAutoTerminationPolicyOutput(BaseModel):
    pass


class PutBlockPublicAccessConfigurationOutput(BaseModel):
    pass


class PutManagedScalingPolicyOutput(BaseModel):
    pass


class ReconfigurationType(Enum):
    OVERWRITE = 'OVERWRITE'
    MERGE = 'MERGE'


class RemoveAutoScalingPolicyInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    InstanceGroupId_1: InstanceGroupId = Field(..., alias='InstanceGroupId')


class RemoveAutoScalingPolicyOutput(BaseModel):
    pass


class RemoveAutoTerminationPolicyInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')


class RemoveAutoTerminationPolicyOutput(BaseModel):
    pass


class RemoveManagedScalingPolicyInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')


class RemoveManagedScalingPolicyOutput(BaseModel):
    pass


class RemoveTagsOutput(BaseModel):
    pass


class RepoUpgradeOnBoot(Enum):
    SECURITY = 'SECURITY'
    NONE = 'NONE'


class ResourceId(RootModel[str]):
    root: str


class ScaleDownBehavior(Enum):
    TERMINATE_AT_INSTANCE_HOUR = 'TERMINATE_AT_INSTANCE_HOUR'
    TERMINATE_AT_TASK_COMPLETION = 'TERMINATE_AT_TASK_COMPLETION'


class ScalingConstraints(BaseModel):
    MaxCapacity: Integer
    MinCapacity: Integer


class SimpleScalingPolicyConfiguration(BaseModel):
    AdjustmentType_1: Optional[AdjustmentType] = Field(None, alias='AdjustmentType')
    CoolDown: Optional[Integer] = None
    ScalingAdjustment: Integer


class SpotProvisioningAllocationStrategy(Enum):
    capacity_optimized = 'capacity-optimized'


class SpotProvisioningTimeoutAction(Enum):
    SWITCH_TO_ON_DEMAND = 'SWITCH_TO_ON_DEMAND'
    TERMINATE_CLUSTER = 'TERMINATE_CLUSTER'


class Statistic(Enum):
    SAMPLE_COUNT = 'SAMPLE_COUNT'
    AVERAGE = 'AVERAGE'
    SUM = 'SUM'
    MINIMUM = 'MINIMUM'
    MAXIMUM = 'MAXIMUM'


class StepCancellationOption(Enum):
    SEND_INTERRUPT = 'SEND_INTERRUPT'
    TERMINATE_PROCESS = 'TERMINATE_PROCESS'


class StepExecutionState(Enum):
    PENDING = 'PENDING'
    RUNNING = 'RUNNING'
    CONTINUE = 'CONTINUE'
    COMPLETED = 'COMPLETED'
    CANCELLED = 'CANCELLED'
    FAILED = 'FAILED'
    INTERRUPTED = 'INTERRUPTED'


class StepId(RootModel[str]):
    root: str


class StepState(Enum):
    PENDING = 'PENDING'
    CANCEL_PENDING = 'CANCEL_PENDING'
    RUNNING = 'RUNNING'
    COMPLETED = 'COMPLETED'
    CANCELLED = 'CANCELLED'
    FAILED = 'FAILED'
    INTERRUPTED = 'INTERRUPTED'


class StepStateChangeReasonCode(Enum):
    NONE = 'NONE'


class StepStateList(RootModel[List[StepState]]):
    root: List[StepState]


class StepTimeline(BaseModel):
    CreationDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None
    StartDateTime: Optional[Date] = None


class String(RootModel[str]):
    root: str


class StringList(RootModel[List[String]]):
    root: List[String]


class StringMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class SubnetIdList(RootModel[List[String]]):
    root: List[String]


class Tag(BaseModel):
    Key: Optional[String] = None
    Value: Optional[String] = None


class TagList(RootModel[List[Tag]]):
    root: List[Tag]


class ThroughputVal(RootModel[conint(ge=0)]):
    root: conint(ge=0)


class Unit(Enum):
    NONE = 'NONE'
    SECONDS = 'SECONDS'
    MICRO_SECONDS = 'MICRO_SECONDS'
    MILLI_SECONDS = 'MILLI_SECONDS'
    BYTES = 'BYTES'
    KILO_BYTES = 'KILO_BYTES'
    MEGA_BYTES = 'MEGA_BYTES'
    GIGA_BYTES = 'GIGA_BYTES'
    TERA_BYTES = 'TERA_BYTES'
    BITS = 'BITS'
    KILO_BITS = 'KILO_BITS'
    MEGA_BITS = 'MEGA_BITS'
    GIGA_BITS = 'GIGA_BITS'
    TERA_BITS = 'TERA_BITS'
    PERCENT = 'PERCENT'
    COUNT = 'COUNT'
    BYTES_PER_SECOND = 'BYTES_PER_SECOND'
    KILO_BYTES_PER_SECOND = 'KILO_BYTES_PER_SECOND'
    MEGA_BYTES_PER_SECOND = 'MEGA_BYTES_PER_SECOND'
    GIGA_BYTES_PER_SECOND = 'GIGA_BYTES_PER_SECOND'
    TERA_BYTES_PER_SECOND = 'TERA_BYTES_PER_SECOND'
    BITS_PER_SECOND = 'BITS_PER_SECOND'
    KILO_BITS_PER_SECOND = 'KILO_BITS_PER_SECOND'
    MEGA_BITS_PER_SECOND = 'MEGA_BITS_PER_SECOND'
    GIGA_BITS_PER_SECOND = 'GIGA_BITS_PER_SECOND'
    TERA_BITS_PER_SECOND = 'TERA_BITS_PER_SECOND'
    COUNT_PER_SECOND = 'COUNT_PER_SECOND'


class VolumeSpecification(BaseModel):
    Iops: Optional[Integer] = None
    SizeInGB: Integer
    Throughput: Optional[ThroughputVal] = None
    VolumeType: String


class WholeNumber(RootModel[conint(ge=0)]):
    root: conint(ge=0)


class XmlString(RootModel[constr(min_length=0, max_length=10280)]):
    root: constr(min_length=0, max_length=10280)


class XmlStringList(RootModel[List[XmlString]]):
    root: List[XmlString]


class XmlStringMaxLen256(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256)


class XmlStringMaxLen256List(RootModel[List[XmlStringMaxLen256]]):
    root: List[XmlStringMaxLen256]


class XAmzTarget(Enum):
    ElasticMapReduce_AddInstanceFleet = 'ElasticMapReduce.AddInstanceFleet'


class XAmzTarget1(Enum):
    ElasticMapReduce_AddInstanceGroups = 'ElasticMapReduce.AddInstanceGroups'


class XAmzTarget2(Enum):
    ElasticMapReduce_AddJobFlowSteps = 'ElasticMapReduce.AddJobFlowSteps'


class XAmzTarget3(Enum):
    ElasticMapReduce_AddTags = 'ElasticMapReduce.AddTags'


class XAmzTarget4(Enum):
    ElasticMapReduce_CancelSteps = 'ElasticMapReduce.CancelSteps'


class XAmzTarget5(Enum):
    ElasticMapReduce_CreateSecurityConfiguration = (
        'ElasticMapReduce.CreateSecurityConfiguration'
    )


class XAmzTarget6(Enum):
    ElasticMapReduce_CreateStudio = 'ElasticMapReduce.CreateStudio'


class XAmzTarget7(Enum):
    ElasticMapReduce_CreateStudioSessionMapping = (
        'ElasticMapReduce.CreateStudioSessionMapping'
    )


class XAmzTarget8(Enum):
    ElasticMapReduce_DeleteSecurityConfiguration = (
        'ElasticMapReduce.DeleteSecurityConfiguration'
    )


class XAmzTarget9(Enum):
    ElasticMapReduce_DeleteStudio = 'ElasticMapReduce.DeleteStudio'


class XAmzTarget10(Enum):
    ElasticMapReduce_DeleteStudioSessionMapping = (
        'ElasticMapReduce.DeleteStudioSessionMapping'
    )


class XAmzTarget11(Enum):
    ElasticMapReduce_DescribeCluster = 'ElasticMapReduce.DescribeCluster'


class XAmzTarget12(Enum):
    ElasticMapReduce_DescribeJobFlows = 'ElasticMapReduce.DescribeJobFlows'


class XAmzTarget13(Enum):
    ElasticMapReduce_DescribeNotebookExecution = (
        'ElasticMapReduce.DescribeNotebookExecution'
    )


class XAmzTarget14(Enum):
    ElasticMapReduce_DescribeReleaseLabel = 'ElasticMapReduce.DescribeReleaseLabel'


class XAmzTarget15(Enum):
    ElasticMapReduce_DescribeSecurityConfiguration = (
        'ElasticMapReduce.DescribeSecurityConfiguration'
    )


class XAmzTarget16(Enum):
    ElasticMapReduce_DescribeStep = 'ElasticMapReduce.DescribeStep'


class XAmzTarget17(Enum):
    ElasticMapReduce_DescribeStudio = 'ElasticMapReduce.DescribeStudio'


class XAmzTarget18(Enum):
    ElasticMapReduce_GetAutoTerminationPolicy = (
        'ElasticMapReduce.GetAutoTerminationPolicy'
    )


class XAmzTarget19(Enum):
    ElasticMapReduce_GetBlockPublicAccessConfiguration = (
        'ElasticMapReduce.GetBlockPublicAccessConfiguration'
    )


class XAmzTarget20(Enum):
    ElasticMapReduce_GetClusterSessionCredentials = (
        'ElasticMapReduce.GetClusterSessionCredentials'
    )


class XAmzTarget21(Enum):
    ElasticMapReduce_GetManagedScalingPolicy = (
        'ElasticMapReduce.GetManagedScalingPolicy'
    )


class XAmzTarget22(Enum):
    ElasticMapReduce_GetStudioSessionMapping = (
        'ElasticMapReduce.GetStudioSessionMapping'
    )


class XAmzTarget23(Enum):
    ElasticMapReduce_ListBootstrapActions = 'ElasticMapReduce.ListBootstrapActions'


class XAmzTarget24(Enum):
    ElasticMapReduce_ListClusters = 'ElasticMapReduce.ListClusters'


class XAmzTarget25(Enum):
    ElasticMapReduce_ListInstanceFleets = 'ElasticMapReduce.ListInstanceFleets'


class XAmzTarget26(Enum):
    ElasticMapReduce_ListInstanceGroups = 'ElasticMapReduce.ListInstanceGroups'


class XAmzTarget27(Enum):
    ElasticMapReduce_ListInstances = 'ElasticMapReduce.ListInstances'


class XAmzTarget28(Enum):
    ElasticMapReduce_ListNotebookExecutions = 'ElasticMapReduce.ListNotebookExecutions'


class XAmzTarget29(Enum):
    ElasticMapReduce_ListReleaseLabels = 'ElasticMapReduce.ListReleaseLabels'


class XAmzTarget30(Enum):
    ElasticMapReduce_ListSecurityConfigurations = (
        'ElasticMapReduce.ListSecurityConfigurations'
    )


class XAmzTarget31(Enum):
    ElasticMapReduce_ListSteps = 'ElasticMapReduce.ListSteps'


class XAmzTarget32(Enum):
    ElasticMapReduce_ListStudioSessionMappings = (
        'ElasticMapReduce.ListStudioSessionMappings'
    )


class XAmzTarget33(Enum):
    ElasticMapReduce_ListStudios = 'ElasticMapReduce.ListStudios'


class XAmzTarget34(Enum):
    ElasticMapReduce_ModifyCluster = 'ElasticMapReduce.ModifyCluster'


class XAmzTarget35(Enum):
    ElasticMapReduce_ModifyInstanceFleet = 'ElasticMapReduce.ModifyInstanceFleet'


class XAmzTarget36(Enum):
    ElasticMapReduce_ModifyInstanceGroups = 'ElasticMapReduce.ModifyInstanceGroups'


class XAmzTarget37(Enum):
    ElasticMapReduce_PutAutoScalingPolicy = 'ElasticMapReduce.PutAutoScalingPolicy'


class XAmzTarget38(Enum):
    ElasticMapReduce_PutAutoTerminationPolicy = (
        'ElasticMapReduce.PutAutoTerminationPolicy'
    )


class XAmzTarget39(Enum):
    ElasticMapReduce_PutBlockPublicAccessConfiguration = (
        'ElasticMapReduce.PutBlockPublicAccessConfiguration'
    )


class XAmzTarget40(Enum):
    ElasticMapReduce_PutManagedScalingPolicy = (
        'ElasticMapReduce.PutManagedScalingPolicy'
    )


class XAmzTarget41(Enum):
    ElasticMapReduce_RemoveAutoScalingPolicy = (
        'ElasticMapReduce.RemoveAutoScalingPolicy'
    )


class XAmzTarget42(Enum):
    ElasticMapReduce_RemoveAutoTerminationPolicy = (
        'ElasticMapReduce.RemoveAutoTerminationPolicy'
    )


class XAmzTarget43(Enum):
    ElasticMapReduce_RemoveManagedScalingPolicy = (
        'ElasticMapReduce.RemoveManagedScalingPolicy'
    )


class XAmzTarget44(Enum):
    ElasticMapReduce_RemoveTags = 'ElasticMapReduce.RemoveTags'


class XAmzTarget45(Enum):
    ElasticMapReduce_RunJobFlow = 'ElasticMapReduce.RunJobFlow'


class XAmzTarget46(Enum):
    ElasticMapReduce_SetTerminationProtection = (
        'ElasticMapReduce.SetTerminationProtection'
    )


class XAmzTarget47(Enum):
    ElasticMapReduce_SetVisibleToAllUsers = 'ElasticMapReduce.SetVisibleToAllUsers'


class XAmzTarget48(Enum):
    ElasticMapReduce_StartNotebookExecution = 'ElasticMapReduce.StartNotebookExecution'


class XAmzTarget49(Enum):
    ElasticMapReduce_StopNotebookExecution = 'ElasticMapReduce.StopNotebookExecution'


class XAmzTarget50(Enum):
    ElasticMapReduce_TerminateJobFlows = 'ElasticMapReduce.TerminateJobFlows'


class XAmzTarget51(Enum):
    ElasticMapReduce_UpdateStudio = 'ElasticMapReduce.UpdateStudio'


class XAmzTarget52(Enum):
    ElasticMapReduce_UpdateStudioSessionMapping = (
        'ElasticMapReduce.UpdateStudioSessionMapping'
    )


class AddInstanceFleetOutput(BaseModel):
    ClusterArn: Optional[ArnType] = None
    ClusterId: Optional[XmlStringMaxLen256] = None
    InstanceFleetId_1: Optional[InstanceFleetId] = Field(None, alias='InstanceFleetId')


class AddTagsInput(BaseModel):
    ResourceId_1: ResourceId = Field(..., alias='ResourceId')
    Tags: TagList


class Application(BaseModel):
    AdditionalInfo: Optional[StringMap] = None
    Args: Optional[StringList] = None
    Name: Optional[String] = None
    Version: Optional[String] = None


class ApplicationList(RootModel[List[Application]]):
    root: List[Application]


class AutoScalingPolicyStateChangeReason(BaseModel):
    Code: Optional[AutoScalingPolicyStateChangeReasonCode] = None
    Message: Optional[String] = None


class AutoScalingPolicyStatus(BaseModel):
    State: Optional[AutoScalingPolicyState] = None
    StateChangeReason: Optional[AutoScalingPolicyStateChangeReason] = None


class AutoTerminationPolicy(BaseModel):
    IdleTimeout: Optional[Long] = None


class BlockPublicAccessConfiguration(BaseModel):
    BlockPublicSecurityGroupRules: Boolean
    PermittedPublicSecurityGroupRuleRanges: Optional[PortRanges] = None


class BlockPublicAccessConfigurationMetadata(BaseModel):
    CreatedByArn: ArnType
    CreationDateTime: Date


class CancelStepsInfo(BaseModel):
    Reason: Optional[String] = None
    Status: Optional[CancelStepsRequestStatus] = None
    StepId_1: Optional[StepId] = Field(None, alias='StepId')


class CancelStepsInfoList(RootModel[List[CancelStepsInfo]]):
    root: List[CancelStepsInfo]


class CancelStepsOutput(BaseModel):
    CancelStepsInfoList_1: Optional[CancelStepsInfoList] = Field(
        None, alias='CancelStepsInfoList'
    )


class ClusterStateChangeReason(BaseModel):
    Code: Optional[ClusterStateChangeReasonCode] = None
    Message: Optional[String] = None


class ClusterTimeline(BaseModel):
    CreationDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None
    ReadyDateTime: Optional[Date] = None


class Command(BaseModel):
    Args: Optional[StringList] = None
    Name: Optional[String] = None
    ScriptPath: Optional[String] = None


class CommandList(RootModel[List[Command]]):
    root: List[Command]


class ComputeLimits(BaseModel):
    MaximumCapacityUnits: Integer
    MaximumCoreCapacityUnits: Optional[Integer] = None
    MaximumOnDemandCapacityUnits: Optional[Integer] = None
    MinimumCapacityUnits: Integer
    UnitType: ComputeLimitsUnitType


class CreateSecurityConfigurationInput(BaseModel):
    Name: XmlString
    SecurityConfiguration: String


class CreateSecurityConfigurationOutput(BaseModel):
    CreationDateTime: Date
    Name: XmlString


class CreateStudioInput(BaseModel):
    AuthMode_1: AuthMode = Field(..., alias='AuthMode')
    DefaultS3Location: XmlString
    Description: Optional[XmlStringMaxLen256] = None
    EngineSecurityGroupId: XmlStringMaxLen256
    IdpAuthUrl: Optional[XmlString] = None
    IdpRelayStateParameterName: Optional[XmlStringMaxLen256] = None
    Name: XmlStringMaxLen256
    ServiceRole: XmlString
    SubnetIds: SubnetIdList
    Tags: Optional[TagList] = None
    UserRole: Optional[XmlString] = None
    VpcId: XmlStringMaxLen256
    WorkspaceSecurityGroupId: XmlStringMaxLen256


class CreateStudioOutput(BaseModel):
    StudioId: Optional[XmlStringMaxLen256] = None
    Url: Optional[XmlString] = None


class CreateStudioSessionMappingInput(BaseModel):
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType_1: IdentityType = Field(..., alias='IdentityType')
    SessionPolicyArn: XmlStringMaxLen256
    StudioId: XmlStringMaxLen256


class DeleteSecurityConfigurationInput(BaseModel):
    Name: XmlString


class DeleteStudioInput(BaseModel):
    StudioId: XmlStringMaxLen256


class DeleteStudioSessionMappingInput(BaseModel):
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType_1: IdentityType = Field(..., alias='IdentityType')
    StudioId: XmlStringMaxLen256


class DescribeJobFlowsInput(BaseModel):
    CreatedAfter: Optional[Date] = None
    CreatedBefore: Optional[Date] = None
    JobFlowIds: Optional[XmlStringList] = None
    JobFlowStates: Optional[JobFlowExecutionStateList] = None


class DescribeNotebookExecutionInput(BaseModel):
    NotebookExecutionId: XmlStringMaxLen256


class DescribeReleaseLabelInput(BaseModel):
    MaxResults: Optional[MaxResultsNumber] = None
    NextToken: Optional[String] = None
    ReleaseLabel: Optional[String] = None


class DescribeSecurityConfigurationInput(BaseModel):
    Name: XmlString


class DescribeSecurityConfigurationOutput(BaseModel):
    CreationDateTime: Optional[Date] = None
    Name: Optional[XmlString] = None
    SecurityConfiguration: Optional[String] = None


class DescribeStepInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    StepId_1: StepId = Field(..., alias='StepId')


class DescribeStudioInput(BaseModel):
    StudioId: XmlStringMaxLen256


class EC2InstanceIdsList(RootModel[List[InstanceId]]):
    root: List[InstanceId]


class EC2InstanceIdsToTerminateList(RootModel[List[InstanceId]]):
    root: List[InstanceId]


class EbsBlockDevice(BaseModel):
    Device: Optional[String] = None
    VolumeSpecification_1: Optional[VolumeSpecification] = Field(
        None, alias='VolumeSpecification'
    )


class EbsBlockDeviceConfig(BaseModel):
    VolumeSpecification_1: VolumeSpecification = Field(..., alias='VolumeSpecification')
    VolumesPerInstance: Optional[Integer] = None


class EbsBlockDeviceConfigList(RootModel[List[EbsBlockDeviceConfig]]):
    root: List[EbsBlockDeviceConfig]


class EbsBlockDeviceList(RootModel[List[EbsBlockDevice]]):
    root: List[EbsBlockDevice]


class EbsConfiguration(BaseModel):
    EbsBlockDeviceConfigs: Optional[EbsBlockDeviceConfigList] = None
    EbsOptimized: Optional[BooleanObject] = None


class EbsVolume(BaseModel):
    Device: Optional[String] = None
    VolumeId: Optional[String] = None


class EbsVolumeList(RootModel[List[EbsVolume]]):
    root: List[EbsVolume]


class Ec2InstanceAttributes(BaseModel):
    AdditionalMasterSecurityGroups: Optional[StringList] = None
    AdditionalSlaveSecurityGroups: Optional[StringList] = None
    Ec2AvailabilityZone: Optional[String] = None
    Ec2KeyName: Optional[String] = None
    Ec2SubnetId: Optional[String] = None
    EmrManagedMasterSecurityGroup: Optional[String] = None
    EmrManagedSlaveSecurityGroup: Optional[String] = None
    IamInstanceProfile: Optional[String] = None
    RequestedEc2AvailabilityZones: Optional[XmlStringMaxLen256List] = None
    RequestedEc2SubnetIds: Optional[XmlStringMaxLen256List] = None
    ServiceAccessSecurityGroup: Optional[String] = None


class ErrorData(RootModel[List[StringMap]]):
    root: List[StringMap]


class ErrorDetail(BaseModel):
    ErrorCode: Optional[String] = None
    ErrorData_1: Optional[ErrorData] = Field(None, alias='ErrorData')
    ErrorMessage: Optional[String] = None


class ErrorDetailList(RootModel[List[ErrorDetail]]):
    root: List[ErrorDetail]


class ExecutionEngineConfig(BaseModel):
    Id: XmlStringMaxLen256
    MasterInstanceSecurityGroupId: Optional[XmlStringMaxLen256] = None
    Type: Optional[ExecutionEngineType] = None


class FailureDetails(BaseModel):
    LogFile: Optional[String] = None
    Message: Optional[String] = None
    Reason: Optional[String] = None


class GetAutoTerminationPolicyOutput(BaseModel):
    AutoTerminationPolicy_1: Optional[AutoTerminationPolicy] = Field(
        None, alias='AutoTerminationPolicy'
    )


class GetBlockPublicAccessConfigurationOutput(BaseModel):
    BlockPublicAccessConfiguration_1: BlockPublicAccessConfiguration = Field(
        ..., alias='BlockPublicAccessConfiguration'
    )
    BlockPublicAccessConfigurationMetadata_1: BlockPublicAccessConfigurationMetadata = (
        Field(..., alias='BlockPublicAccessConfigurationMetadata')
    )


class GetClusterSessionCredentialsInput(BaseModel):
    ClusterId: XmlStringMaxLen256
    ExecutionRoleArn: ArnType


class GetStudioSessionMappingInput(BaseModel):
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType_1: IdentityType = Field(..., alias='IdentityType')
    StudioId: XmlStringMaxLen256


class HadoopStepConfig(BaseModel):
    Args: Optional[StringList] = None
    Jar: Optional[String] = None
    MainClass: Optional[String] = None
    Properties: Optional[StringMap] = None


class InstanceFleetStateChangeReason(BaseModel):
    Code: Optional[InstanceFleetStateChangeReasonCode] = None
    Message: Optional[String] = None


class InstanceFleetStatus(BaseModel):
    State: Optional[InstanceFleetState] = None
    StateChangeReason: Optional[InstanceFleetStateChangeReason] = None
    Timeline: Optional[InstanceFleetTimeline] = None


class InstanceGroupDetail(BaseModel):
    BidPrice: Optional[XmlStringMaxLen256] = None
    CreationDateTime: Date
    CustomAmiId: Optional[XmlStringMaxLen256] = None
    EndDateTime: Optional[Date] = None
    InstanceGroupId: Optional[XmlStringMaxLen256] = None
    InstanceRequestCount: Integer
    InstanceRole: InstanceRoleType
    InstanceRunningCount: Integer
    InstanceType_1: InstanceType = Field(..., alias='InstanceType')
    LastStateChangeReason: Optional[XmlString] = None
    Market: MarketType
    Name: Optional[XmlStringMaxLen256] = None
    ReadyDateTime: Optional[Date] = None
    StartDateTime: Optional[Date] = None
    State: InstanceGroupState


class InstanceGroupDetailList(RootModel[List[InstanceGroupDetail]]):
    root: List[InstanceGroupDetail]


class InstanceGroupIdsList(RootModel[List[XmlStringMaxLen256]]):
    root: List[XmlStringMaxLen256]


class InstanceGroupStateChangeReason(BaseModel):
    Code: Optional[InstanceGroupStateChangeReasonCode] = None
    Message: Optional[String] = None


class InstanceGroupStatus(BaseModel):
    State: Optional[InstanceGroupState] = None
    StateChangeReason: Optional[InstanceGroupStateChangeReason] = None
    Timeline: Optional[InstanceGroupTimeline] = None


class InstanceResizePolicy(BaseModel):
    InstanceTerminationTimeout: Optional[Integer] = None
    InstancesToProtect: Optional[EC2InstanceIdsList] = None
    InstancesToTerminate: Optional[EC2InstanceIdsList] = None


class InstanceStateChangeReason(BaseModel):
    Code: Optional[InstanceStateChangeReasonCode] = None
    Message: Optional[String] = None


class InstanceStatus(BaseModel):
    State: Optional[InstanceState] = None
    StateChangeReason: Optional[InstanceStateChangeReason] = None
    Timeline: Optional[InstanceTimeline] = None


class JobFlowExecutionStatusDetail(BaseModel):
    CreationDateTime: Date
    EndDateTime: Optional[Date] = None
    LastStateChangeReason: Optional[XmlString] = None
    ReadyDateTime: Optional[Date] = None
    StartDateTime: Optional[Date] = None
    State: JobFlowExecutionState


class KerberosAttributes(BaseModel):
    ADDomainJoinPassword: Optional[XmlStringMaxLen256] = None
    ADDomainJoinUser: Optional[XmlStringMaxLen256] = None
    CrossRealmTrustPrincipalPassword: Optional[XmlStringMaxLen256] = None
    KdcAdminPassword: XmlStringMaxLen256
    Realm: XmlStringMaxLen256


class KeyValue(BaseModel):
    Key: Optional[XmlString] = None
    Value: Optional[XmlString] = None


class KeyValueList(RootModel[List[KeyValue]]):
    root: List[KeyValue]


class ListBootstrapActionsInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListBootstrapActionsOutput(BaseModel):
    BootstrapActions: Optional[CommandList] = None
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListClustersInput(BaseModel):
    ClusterStates: Optional[ClusterStateList] = None
    CreatedAfter: Optional[Date] = None
    CreatedBefore: Optional[Date] = None
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListInstanceFleetsInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListInstanceGroupsInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListInstancesInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    InstanceFleetId_1: Optional[InstanceFleetId] = Field(None, alias='InstanceFleetId')
    InstanceFleetType_1: Optional[InstanceFleetType] = Field(
        None, alias='InstanceFleetType'
    )
    InstanceGroupId_1: Optional[InstanceGroupId] = Field(None, alias='InstanceGroupId')
    InstanceGroupTypes: Optional[InstanceGroupTypeList] = None
    InstanceStates: Optional[InstanceStateList] = None
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListNotebookExecutionsInput(BaseModel):
    EditorId: Optional[XmlStringMaxLen256] = None
    From: Optional[Date] = None
    Marker_1: Optional[Marker] = Field(None, alias='Marker')
    Status: Optional[NotebookExecutionStatus] = None
    To: Optional[Date] = None


class ListReleaseLabelsOutput(BaseModel):
    NextToken: Optional[String] = None
    ReleaseLabels: Optional[StringList] = None


class ListSecurityConfigurationsInput(BaseModel):
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListStepsInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    Marker_1: Optional[Marker] = Field(None, alias='Marker')
    StepIds: Optional[XmlStringList] = None
    StepStates: Optional[StepStateList] = None


class ListStudioSessionMappingsInput(BaseModel):
    IdentityType_1: Optional[IdentityType] = Field(None, alias='IdentityType')
    Marker_1: Optional[Marker] = Field(None, alias='Marker')
    StudioId: Optional[XmlStringMaxLen256] = None


class ListStudiosInput(BaseModel):
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ManagedScalingPolicy(BaseModel):
    ComputeLimits_1: Optional[ComputeLimits] = Field(None, alias='ComputeLimits')


class MetricDimension(BaseModel):
    Key: Optional[String] = None
    Value: Optional[String] = None


class MetricDimensionList(RootModel[List[MetricDimension]]):
    root: List[MetricDimension]


class ModifyClusterInput(BaseModel):
    ClusterId: String
    StepConcurrencyLevel: Optional[Integer] = None


class NotebookExecution(BaseModel):
    Arn: Optional[XmlStringMaxLen256] = None
    EditorId: Optional[XmlStringMaxLen256] = None
    EndTime: Optional[Date] = None
    ExecutionEngine: Optional[ExecutionEngineConfig] = None
    LastStateChangeReason: Optional[XmlString] = None
    NotebookExecutionId: Optional[XmlStringMaxLen256] = None
    NotebookExecutionName: Optional[XmlStringMaxLen256] = None
    NotebookInstanceSecurityGroupId: Optional[XmlStringMaxLen256] = None
    NotebookParams: Optional[XmlString] = None
    OutputNotebookURI: Optional[XmlString] = None
    StartTime: Optional[Date] = None
    Status: Optional[NotebookExecutionStatus] = None
    Tags: Optional[TagList] = None


class NotebookExecutionSummary(BaseModel):
    EditorId: Optional[XmlStringMaxLen256] = None
    EndTime: Optional[Date] = None
    NotebookExecutionId: Optional[XmlStringMaxLen256] = None
    NotebookExecutionName: Optional[XmlStringMaxLen256] = None
    StartTime: Optional[Date] = None
    Status: Optional[NotebookExecutionStatus] = None


class NotebookExecutionSummaryList(RootModel[List[NotebookExecutionSummary]]):
    root: List[NotebookExecutionSummary]


class OSRelease(BaseModel):
    Label: Optional[String] = None


class OSReleaseList(RootModel[List[OSRelease]]):
    root: List[OSRelease]


class OnDemandCapacityReservationOptions(BaseModel):
    CapacityReservationPreference: Optional[OnDemandCapacityReservationPreference] = (
        None
    )
    CapacityReservationResourceGroupArn: Optional[XmlStringMaxLen256] = None
    UsageStrategy: Optional[OnDemandCapacityReservationUsageStrategy] = None


class OnDemandProvisioningSpecification(BaseModel):
    AllocationStrategy: OnDemandProvisioningAllocationStrategy
    CapacityReservationOptions: Optional[OnDemandCapacityReservationOptions] = None


class OnDemandResizingSpecification(BaseModel):
    TimeoutDurationMinutes: WholeNumber


class PlacementGroupConfig(BaseModel):
    InstanceRole: InstanceRoleType
    PlacementStrategy: Optional[PlacementGroupStrategy] = None


class PlacementGroupConfigList(RootModel[List[PlacementGroupConfig]]):
    root: List[PlacementGroupConfig]


class PlacementType(BaseModel):
    AvailabilityZone: Optional[XmlString] = None
    AvailabilityZones: Optional[XmlStringMaxLen256List] = None


class PutAutoTerminationPolicyInput(BaseModel):
    AutoTerminationPolicy_1: Optional[AutoTerminationPolicy] = Field(
        None, alias='AutoTerminationPolicy'
    )
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')


class PutBlockPublicAccessConfigurationInput(BaseModel):
    BlockPublicAccessConfiguration_1: BlockPublicAccessConfiguration = Field(
        ..., alias='BlockPublicAccessConfiguration'
    )


class PutManagedScalingPolicyInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    ManagedScalingPolicy_1: ManagedScalingPolicy = Field(
        ..., alias='ManagedScalingPolicy'
    )


class ReleaseLabelFilter(BaseModel):
    Application: Optional[String] = None
    Prefix: Optional[String] = None


class RemoveTagsInput(BaseModel):
    ResourceId_1: ResourceId = Field(..., alias='ResourceId')
    TagKeys: StringList


class RunJobFlowOutput(BaseModel):
    ClusterArn: Optional[ArnType] = None
    JobFlowId: Optional[XmlStringMaxLen256] = None


class ScalingAction(BaseModel):
    Market: Optional[MarketType] = None
    SimpleScalingPolicyConfiguration_1: SimpleScalingPolicyConfiguration = Field(
        ..., alias='SimpleScalingPolicyConfiguration'
    )


class ScriptBootstrapActionConfig(BaseModel):
    Args: Optional[XmlStringList] = None
    Path: XmlString


class SecurityConfigurationSummary(BaseModel):
    CreationDateTime: Optional[Date] = None
    Name: Optional[XmlString] = None


class SecurityGroupsList(RootModel[List[XmlStringMaxLen256]]):
    root: List[XmlStringMaxLen256]


class SessionMappingDetail(BaseModel):
    CreationTime: Optional[Date] = None
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType_1: Optional[IdentityType] = Field(None, alias='IdentityType')
    LastModifiedTime: Optional[Date] = None
    SessionPolicyArn: Optional[XmlStringMaxLen256] = None
    StudioId: Optional[XmlStringMaxLen256] = None


class SessionMappingSummary(BaseModel):
    CreationTime: Optional[Date] = None
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType_1: Optional[IdentityType] = Field(None, alias='IdentityType')
    SessionPolicyArn: Optional[XmlStringMaxLen256] = None
    StudioId: Optional[XmlStringMaxLen256] = None


class SessionMappingSummaryList(RootModel[List[SessionMappingSummary]]):
    root: List[SessionMappingSummary]


class SetTerminationProtectionInput(BaseModel):
    JobFlowIds: XmlStringList
    TerminationProtected: Boolean


class SetVisibleToAllUsersInput(BaseModel):
    JobFlowIds: XmlStringList
    VisibleToAllUsers: Boolean


class ShrinkPolicy(BaseModel):
    DecommissionTimeout: Optional[Integer] = None
    InstanceResizePolicy_1: Optional[InstanceResizePolicy] = Field(
        None, alias='InstanceResizePolicy'
    )


class SimplifiedApplication(BaseModel):
    Name: Optional[String] = None
    Version: Optional[String] = None


class SimplifiedApplicationList(RootModel[List[SimplifiedApplication]]):
    root: List[SimplifiedApplication]


class SpotProvisioningSpecification(BaseModel):
    AllocationStrategy: Optional[SpotProvisioningAllocationStrategy] = None
    BlockDurationMinutes: Optional[WholeNumber] = None
    TimeoutAction: SpotProvisioningTimeoutAction
    TimeoutDurationMinutes: WholeNumber


class SpotResizingSpecification(BaseModel):
    TimeoutDurationMinutes: WholeNumber


class StartNotebookExecutionInput(BaseModel):
    EditorId: XmlStringMaxLen256
    ExecutionEngine: ExecutionEngineConfig
    NotebookExecutionName: Optional[XmlStringMaxLen256] = None
    NotebookInstanceSecurityGroupId: Optional[XmlStringMaxLen256] = None
    NotebookParams: Optional[XmlString] = None
    RelativePath: XmlString
    ServiceRole: XmlString
    Tags: Optional[TagList] = None


class StartNotebookExecutionOutput(BaseModel):
    NotebookExecutionId: Optional[XmlStringMaxLen256] = None


class StepExecutionStatusDetail(BaseModel):
    CreationDateTime: Date
    EndDateTime: Optional[Date] = None
    LastStateChangeReason: Optional[XmlString] = None
    StartDateTime: Optional[Date] = None
    State: StepExecutionState


class StepIdsList(RootModel[List[XmlStringMaxLen256]]):
    root: List[XmlStringMaxLen256]


class StepStateChangeReason(BaseModel):
    Code: Optional[StepStateChangeReasonCode] = None
    Message: Optional[String] = None


class StepStatus(BaseModel):
    FailureDetails_1: Optional[FailureDetails] = Field(None, alias='FailureDetails')
    State: Optional[StepState] = None
    StateChangeReason: Optional[StepStateChangeReason] = None
    Timeline: Optional[StepTimeline] = None


class StepSummary(BaseModel):
    ActionOnFailure_1: Optional[ActionOnFailure] = Field(None, alias='ActionOnFailure')
    Config: Optional[HadoopStepConfig] = None
    Id: Optional[StepId] = None
    Name: Optional[String] = None
    Status: Optional[StepStatus] = None


class StepSummaryList(RootModel[List[StepSummary]]):
    root: List[StepSummary]


class StopNotebookExecutionInput(BaseModel):
    NotebookExecutionId: XmlStringMaxLen256


class Studio(BaseModel):
    AuthMode_1: Optional[AuthMode] = Field(None, alias='AuthMode')
    CreationTime: Optional[Date] = None
    DefaultS3Location: Optional[XmlString] = None
    Description: Optional[XmlStringMaxLen256] = None
    EngineSecurityGroupId: Optional[XmlStringMaxLen256] = None
    IdpAuthUrl: Optional[XmlString] = None
    IdpRelayStateParameterName: Optional[XmlStringMaxLen256] = None
    Name: Optional[XmlStringMaxLen256] = None
    ServiceRole: Optional[XmlString] = None
    StudioArn: Optional[XmlStringMaxLen256] = None
    StudioId: Optional[XmlStringMaxLen256] = None
    SubnetIds: Optional[SubnetIdList] = None
    Tags: Optional[TagList] = None
    Url: Optional[XmlString] = None
    UserRole: Optional[XmlString] = None
    VpcId: Optional[XmlStringMaxLen256] = None
    WorkspaceSecurityGroupId: Optional[XmlStringMaxLen256] = None


class StudioSummary(BaseModel):
    AuthMode_1: Optional[AuthMode] = Field(None, alias='AuthMode')
    CreationTime: Optional[Date] = None
    Description: Optional[XmlStringMaxLen256] = None
    Name: Optional[XmlStringMaxLen256] = None
    StudioId: Optional[XmlStringMaxLen256] = None
    Url: Optional[XmlStringMaxLen256] = None
    VpcId: Optional[XmlStringMaxLen256] = None


class StudioSummaryList(RootModel[List[StudioSummary]]):
    root: List[StudioSummary]


class SupportedProductConfig(BaseModel):
    Args: Optional[XmlStringList] = None
    Name: Optional[XmlStringMaxLen256] = None


class SupportedProductsList(RootModel[List[XmlStringMaxLen256]]):
    root: List[XmlStringMaxLen256]


class TerminateJobFlowsInput(BaseModel):
    JobFlowIds: XmlStringList


class UpdateStudioInput(BaseModel):
    DefaultS3Location: Optional[XmlString] = None
    Description: Optional[XmlStringMaxLen256] = None
    Name: Optional[XmlStringMaxLen256] = None
    StudioId: XmlStringMaxLen256
    SubnetIds: Optional[SubnetIdList] = None


class UpdateStudioSessionMappingInput(BaseModel):
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType_1: IdentityType = Field(..., alias='IdentityType')
    SessionPolicyArn: XmlStringMaxLen256
    StudioId: XmlStringMaxLen256


class UsernamePassword(BaseModel):
    Password: Optional[XmlStringMaxLen256] = None
    Username: Optional[XmlStringMaxLen256] = None


class AddInstanceGroupsOutput(BaseModel):
    ClusterArn: Optional[ArnType] = None
    InstanceGroupIds: Optional[InstanceGroupIdsList] = None
    JobFlowId: Optional[XmlStringMaxLen256] = None


class AddJobFlowStepsOutput(BaseModel):
    StepIds: Optional[StepIdsList] = None


class BootstrapActionConfig(BaseModel):
    Name: XmlStringMaxLen256
    ScriptBootstrapAction: ScriptBootstrapActionConfig


class BootstrapActionConfigList(RootModel[List[BootstrapActionConfig]]):
    root: List[BootstrapActionConfig]


class BootstrapActionDetail(BaseModel):
    BootstrapActionConfig_1: Optional[BootstrapActionConfig] = Field(
        None, alias='BootstrapActionConfig'
    )


class BootstrapActionDetailList(RootModel[List[BootstrapActionDetail]]):
    root: List[BootstrapActionDetail]


class CancelStepsInput(BaseModel):
    ClusterId: XmlStringMaxLen256
    StepCancellationOption_1: Optional[StepCancellationOption] = Field(
        None, alias='StepCancellationOption'
    )
    StepIds: StepIdsList


class CloudWatchAlarmDefinition(BaseModel):
    ComparisonOperator_1: ComparisonOperator = Field(..., alias='ComparisonOperator')
    Dimensions: Optional[MetricDimensionList] = None
    EvaluationPeriods: Optional[Integer] = None
    MetricName: String
    Namespace: Optional[String] = None
    Period: Integer
    Statistic_1: Optional[Statistic] = Field(None, alias='Statistic')
    Threshold: NonNegativeDouble
    Unit_1: Optional[Unit] = Field(None, alias='Unit')


class ClusterStatus(BaseModel):
    ErrorDetails: Optional[ErrorDetailList] = None
    State: Optional[ClusterState] = None
    StateChangeReason: Optional[ClusterStateChangeReason] = None
    Timeline: Optional[ClusterTimeline] = None


class ClusterSummary(BaseModel):
    ClusterArn: Optional[ArnType] = None
    Id: Optional[ClusterId] = None
    Name: Optional[String] = None
    NormalizedInstanceHours: Optional[Integer] = None
    OutpostArn: Optional[OptionalArnType] = None
    Status: Optional[ClusterStatus] = None


class ClusterSummaryList(RootModel[List[ClusterSummary]]):
    root: List[ClusterSummary]


class Credentials(BaseModel):
    UsernamePassword_1: Optional[UsernamePassword] = Field(
        None, alias='UsernamePassword'
    )


class DescribeNotebookExecutionOutput(BaseModel):
    NotebookExecution_1: Optional[NotebookExecution] = Field(
        None, alias='NotebookExecution'
    )


class DescribeReleaseLabelOutput(BaseModel):
    Applications: Optional[SimplifiedApplicationList] = None
    AvailableOSReleases: Optional[OSReleaseList] = None
    NextToken: Optional[String] = None
    ReleaseLabel: Optional[String] = None


class DescribeStudioOutput(BaseModel):
    Studio_1: Optional[Studio] = Field(None, alias='Studio')


class GetClusterSessionCredentialsOutput(BaseModel):
    Credentials_1: Optional[Credentials] = Field(None, alias='Credentials')
    ExpiresAt: Optional[Date] = None


class GetManagedScalingPolicyOutput(BaseModel):
    ManagedScalingPolicy_1: Optional[ManagedScalingPolicy] = Field(
        None, alias='ManagedScalingPolicy'
    )


class GetStudioSessionMappingOutput(BaseModel):
    SessionMapping: Optional[SessionMappingDetail] = None


class HadoopJarStepConfig(BaseModel):
    Args: Optional[XmlStringList] = None
    Jar: XmlString
    MainClass: Optional[XmlString] = None
    Properties: Optional[KeyValueList] = None


class Instance(BaseModel):
    EbsVolumes: Optional[EbsVolumeList] = None
    Ec2InstanceId: Optional[InstanceId] = None
    Id: Optional[InstanceId] = None
    InstanceFleetId_1: Optional[InstanceFleetId] = Field(None, alias='InstanceFleetId')
    InstanceGroupId: Optional[String] = None
    InstanceType_1: Optional[InstanceType] = Field(None, alias='InstanceType')
    Market: Optional[MarketType] = None
    PrivateDnsName: Optional[String] = None
    PrivateIpAddress: Optional[String] = None
    PublicDnsName: Optional[String] = None
    PublicIpAddress: Optional[String] = None
    Status: Optional[InstanceStatus] = None


class InstanceFleetProvisioningSpecifications(BaseModel):
    OnDemandSpecification: Optional[OnDemandProvisioningSpecification] = None
    SpotSpecification: Optional[SpotProvisioningSpecification] = None


class InstanceFleetResizingSpecifications(BaseModel):
    OnDemandResizeSpecification: Optional[OnDemandResizingSpecification] = None
    SpotResizeSpecification: Optional[SpotResizingSpecification] = None


class InstanceList(RootModel[List[Instance]]):
    root: List[Instance]


class JobFlowInstancesDetail(BaseModel):
    Ec2KeyName: Optional[XmlStringMaxLen256] = None
    Ec2SubnetId: Optional[XmlStringMaxLen256] = None
    HadoopVersion: Optional[XmlStringMaxLen256] = None
    InstanceCount: Integer
    InstanceGroups: Optional[InstanceGroupDetailList] = None
    KeepJobFlowAliveWhenNoSteps: Optional[Boolean] = None
    MasterInstanceId: Optional[XmlString] = None
    MasterInstanceType: InstanceType
    MasterPublicDnsName: Optional[XmlString] = None
    NormalizedInstanceHours: Optional[Integer] = None
    Placement: Optional[PlacementType] = None
    SlaveInstanceType: InstanceType
    TerminationProtected: Optional[Boolean] = None


class ListClustersOutput(BaseModel):
    Clusters: Optional[ClusterSummaryList] = None
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListInstancesOutput(BaseModel):
    Instances: Optional[InstanceList] = None
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListNotebookExecutionsOutput(BaseModel):
    Marker_1: Optional[Marker] = Field(None, alias='Marker')
    NotebookExecutions: Optional[NotebookExecutionSummaryList] = None


class ListReleaseLabelsInput(BaseModel):
    Filters: Optional[ReleaseLabelFilter] = None
    MaxResults: Optional[MaxResultsNumber] = None
    NextToken: Optional[String] = None


class ListStepsOutput(BaseModel):
    Marker_1: Optional[Marker] = Field(None, alias='Marker')
    Steps: Optional[StepSummaryList] = None


class ListStudioSessionMappingsOutput(BaseModel):
    Marker_1: Optional[Marker] = Field(None, alias='Marker')
    SessionMappings: Optional[SessionMappingSummaryList] = None


class ListStudiosOutput(BaseModel):
    Marker_1: Optional[Marker] = Field(None, alias='Marker')
    Studios: Optional[StudioSummaryList] = None


class NewSupportedProductsList(RootModel[List[SupportedProductConfig]]):
    root: List[SupportedProductConfig]


class ScalingTrigger(BaseModel):
    CloudWatchAlarmDefinition_1: CloudWatchAlarmDefinition = Field(
        ..., alias='CloudWatchAlarmDefinition'
    )


class SecurityConfigurationList(RootModel[List[SecurityConfigurationSummary]]):
    root: List[SecurityConfigurationSummary]


class Step(BaseModel):
    ActionOnFailure_1: Optional[ActionOnFailure] = Field(None, alias='ActionOnFailure')
    Config: Optional[HadoopStepConfig] = None
    ExecutionRoleArn: Optional[OptionalArnType] = None
    Id: Optional[StepId] = None
    Name: Optional[String] = None
    Status: Optional[StepStatus] = None


class StepConfig(BaseModel):
    ActionOnFailure_1: Optional[ActionOnFailure] = Field(None, alias='ActionOnFailure')
    HadoopJarStep: HadoopJarStepConfig
    Name: XmlStringMaxLen256


class StepConfigList(RootModel[List[StepConfig]]):
    root: List[StepConfig]


class StepDetail(BaseModel):
    ExecutionStatusDetail: StepExecutionStatusDetail
    StepConfig_1: StepConfig = Field(..., alias='StepConfig')


class StepDetailList(RootModel[List[StepDetail]]):
    root: List[StepDetail]


class AddJobFlowStepsInput(BaseModel):
    ExecutionRoleArn: Optional[ArnType] = None
    JobFlowId: XmlStringMaxLen256
    Steps: StepConfigList


class DescribeStepOutput(BaseModel):
    Step_1: Optional[Step] = Field(None, alias='Step')


class InstanceFleetModifyConfig(BaseModel):
    InstanceFleetId_1: InstanceFleetId = Field(..., alias='InstanceFleetId')
    ResizeSpecifications: Optional[InstanceFleetResizingSpecifications] = None
    TargetOnDemandCapacity: Optional[WholeNumber] = None
    TargetSpotCapacity: Optional[WholeNumber] = None


class JobFlowDetail(BaseModel):
    AmiVersion: Optional[XmlStringMaxLen256] = None
    AutoScalingRole: Optional[XmlString] = None
    BootstrapActions: Optional[BootstrapActionDetailList] = None
    ExecutionStatusDetail: JobFlowExecutionStatusDetail
    Instances: JobFlowInstancesDetail
    JobFlowId: XmlStringMaxLen256
    JobFlowRole: Optional[XmlString] = None
    LogEncryptionKmsKeyId: Optional[XmlString] = None
    LogUri: Optional[XmlString] = None
    Name: XmlStringMaxLen256
    ScaleDownBehavior_1: Optional[ScaleDownBehavior] = Field(
        None, alias='ScaleDownBehavior'
    )
    ServiceRole: Optional[XmlString] = None
    Steps: Optional[StepDetailList] = None
    SupportedProducts: Optional[SupportedProductsList] = None
    VisibleToAllUsers: Optional[Boolean] = None


class JobFlowDetailList(RootModel[List[JobFlowDetail]]):
    root: List[JobFlowDetail]


class ListSecurityConfigurationsOutput(BaseModel):
    Marker_1: Optional[Marker] = Field(None, alias='Marker')
    SecurityConfigurations: Optional[SecurityConfigurationList] = None


class ModifyInstanceFleetInput(BaseModel):
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    InstanceFleet: InstanceFleetModifyConfig


class ScalingRule(BaseModel):
    Action: ScalingAction
    Description: Optional[String] = None
    Name: String
    Trigger: ScalingTrigger


class ScalingRuleList(RootModel[List[ScalingRule]]):
    root: List[ScalingRule]


class AutoScalingPolicy(BaseModel):
    Constraints: ScalingConstraints
    Rules: ScalingRuleList


class AutoScalingPolicyDescription(BaseModel):
    Constraints: Optional[ScalingConstraints] = None
    Rules: Optional[ScalingRuleList] = None
    Status: Optional[AutoScalingPolicyStatus] = None


class DescribeJobFlowsOutput(BaseModel):
    JobFlows: Optional[JobFlowDetailList] = None


class PutAutoScalingPolicyInput(BaseModel):
    AutoScalingPolicy_1: AutoScalingPolicy = Field(..., alias='AutoScalingPolicy')
    ClusterId_1: ClusterId = Field(..., alias='ClusterId')
    InstanceGroupId_1: InstanceGroupId = Field(..., alias='InstanceGroupId')


class PutAutoScalingPolicyOutput(BaseModel):
    AutoScalingPolicy: Optional[AutoScalingPolicyDescription] = None
    ClusterArn: Optional[ArnType] = None
    ClusterId_1: Optional[ClusterId] = Field(None, alias='ClusterId')
    InstanceGroupId_1: Optional[InstanceGroupId] = Field(None, alias='InstanceGroupId')


class AddInstanceFleetInput(BaseModel):
    ClusterId: XmlStringMaxLen256
    InstanceFleet: InstanceFleetConfig


class AddInstanceGroupsInput(BaseModel):
    InstanceGroups: InstanceGroupConfigList
    JobFlowId: XmlStringMaxLen256


class Cluster(BaseModel):
    Applications: Optional[ApplicationList] = None
    AutoScalingRole: Optional[XmlString] = None
    AutoTerminate: Optional[Boolean] = None
    ClusterArn: Optional[ArnType] = None
    Configurations: Optional[ConfigurationList] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None
    EbsRootVolumeSize: Optional[Integer] = None
    Ec2InstanceAttributes_1: Optional[Ec2InstanceAttributes] = Field(
        None, alias='Ec2InstanceAttributes'
    )
    Id: Optional[ClusterId] = None
    InstanceCollectionType_1: Optional[InstanceCollectionType] = Field(
        None, alias='InstanceCollectionType'
    )
    KerberosAttributes_1: Optional[KerberosAttributes] = Field(
        None, alias='KerberosAttributes'
    )
    LogEncryptionKmsKeyId: Optional[String] = None
    LogUri: Optional[String] = None
    MasterPublicDnsName: Optional[String] = None
    Name: Optional[String] = None
    NormalizedInstanceHours: Optional[Integer] = None
    OSReleaseLabel: Optional[String] = None
    OutpostArn: Optional[OptionalArnType] = None
    PlacementGroups: Optional[PlacementGroupConfigList] = None
    ReleaseLabel: Optional[String] = None
    RepoUpgradeOnBoot_1: Optional[RepoUpgradeOnBoot] = Field(
        None, alias='RepoUpgradeOnBoot'
    )
    RequestedAmiVersion: Optional[String] = None
    RunningAmiVersion: Optional[String] = None
    ScaleDownBehavior_1: Optional[ScaleDownBehavior] = Field(
        None, alias='ScaleDownBehavior'
    )
    SecurityConfiguration: Optional[XmlString] = None
    ServiceRole: Optional[String] = None
    Status: Optional[ClusterStatus] = None
    StepConcurrencyLevel: Optional[Integer] = None
    Tags: Optional[TagList] = None
    TerminationProtected: Optional[Boolean] = None
    VisibleToAllUsers: Optional[Boolean] = None


class Configuration(BaseModel):
    Classification: Optional[String] = None
    Configurations: Optional[ConfigurationList] = None
    Properties: Optional[StringMap] = None


class ConfigurationList(RootModel[List[Configuration]]):
    root: List[Configuration]


class DescribeClusterOutput(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class InstanceFleet(BaseModel):
    Id: Optional[InstanceFleetId] = None
    InstanceFleetType_1: Optional[InstanceFleetType] = Field(
        None, alias='InstanceFleetType'
    )
    InstanceTypeSpecifications: Optional[InstanceTypeSpecificationList] = None
    LaunchSpecifications: Optional[InstanceFleetProvisioningSpecifications] = None
    Name: Optional[XmlStringMaxLen256] = None
    ProvisionedOnDemandCapacity: Optional[WholeNumber] = None
    ProvisionedSpotCapacity: Optional[WholeNumber] = None
    ResizeSpecifications: Optional[InstanceFleetResizingSpecifications] = None
    Status: Optional[InstanceFleetStatus] = None
    TargetOnDemandCapacity: Optional[WholeNumber] = None
    TargetSpotCapacity: Optional[WholeNumber] = None


class InstanceFleetConfig(BaseModel):
    InstanceFleetType_1: InstanceFleetType = Field(..., alias='InstanceFleetType')
    InstanceTypeConfigs: Optional[InstanceTypeConfigList] = None
    LaunchSpecifications: Optional[InstanceFleetProvisioningSpecifications] = None
    Name: Optional[XmlStringMaxLen256] = None
    ResizeSpecifications: Optional[InstanceFleetResizingSpecifications] = None
    TargetOnDemandCapacity: Optional[WholeNumber] = None
    TargetSpotCapacity: Optional[WholeNumber] = None


class InstanceFleetConfigList(RootModel[List[InstanceFleetConfig]]):
    root: List[InstanceFleetConfig]


class InstanceFleetList(RootModel[List[InstanceFleet]]):
    root: List[InstanceFleet]


class InstanceGroup(BaseModel):
    AutoScalingPolicy: Optional[AutoScalingPolicyDescription] = None
    BidPrice: Optional[String] = None
    Configurations: Optional[ConfigurationList] = None
    ConfigurationsVersion: Optional[Long] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None
    EbsBlockDevices: Optional[EbsBlockDeviceList] = None
    EbsOptimized: Optional[BooleanObject] = None
    Id: Optional[InstanceGroupId] = None
    InstanceGroupType_1: Optional[InstanceGroupType] = Field(
        None, alias='InstanceGroupType'
    )
    InstanceType_1: Optional[InstanceType] = Field(None, alias='InstanceType')
    LastSuccessfullyAppliedConfigurations: Optional[ConfigurationList] = None
    LastSuccessfullyAppliedConfigurationsVersion: Optional[Long] = None
    Market: Optional[MarketType] = None
    Name: Optional[String] = None
    RequestedInstanceCount: Optional[Integer] = None
    RunningInstanceCount: Optional[Integer] = None
    ShrinkPolicy_1: Optional[ShrinkPolicy] = Field(None, alias='ShrinkPolicy')
    Status: Optional[InstanceGroupStatus] = None


class InstanceGroupConfig(BaseModel):
    AutoScalingPolicy_1: Optional[AutoScalingPolicy] = Field(
        None, alias='AutoScalingPolicy'
    )
    BidPrice: Optional[XmlStringMaxLen256] = None
    Configurations: Optional[ConfigurationList] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None
    EbsConfiguration_1: Optional[EbsConfiguration] = Field(
        None, alias='EbsConfiguration'
    )
    InstanceCount: Integer
    InstanceRole: InstanceRoleType
    InstanceType_1: InstanceType = Field(..., alias='InstanceType')
    Market: Optional[MarketType] = None
    Name: Optional[XmlStringMaxLen256] = None


class InstanceGroupConfigList(RootModel[List[InstanceGroupConfig]]):
    root: List[InstanceGroupConfig]


class InstanceGroupList(RootModel[List[InstanceGroup]]):
    root: List[InstanceGroup]


class InstanceGroupModifyConfig(BaseModel):
    Configurations: Optional[ConfigurationList] = None
    EC2InstanceIdsToTerminate: Optional[EC2InstanceIdsToTerminateList] = None
    InstanceCount: Optional[Integer] = None
    InstanceGroupId: XmlStringMaxLen256
    ReconfigurationType_1: Optional[ReconfigurationType] = Field(
        None, alias='ReconfigurationType'
    )
    ShrinkPolicy_1: Optional[ShrinkPolicy] = Field(None, alias='ShrinkPolicy')


class InstanceGroupModifyConfigList(RootModel[List[InstanceGroupModifyConfig]]):
    root: List[InstanceGroupModifyConfig]


class InstanceTypeConfig(BaseModel):
    BidPrice: Optional[XmlStringMaxLen256] = None
    BidPriceAsPercentageOfOnDemandPrice: Optional[NonNegativeDouble] = None
    Configurations: Optional[ConfigurationList] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None
    EbsConfiguration_1: Optional[EbsConfiguration] = Field(
        None, alias='EbsConfiguration'
    )
    InstanceType_1: InstanceType = Field(..., alias='InstanceType')
    WeightedCapacity: Optional[WholeNumber] = None


class InstanceTypeConfigList(RootModel[List[InstanceTypeConfig]]):
    root: List[InstanceTypeConfig]


class InstanceTypeSpecification(BaseModel):
    BidPrice: Optional[XmlStringMaxLen256] = None
    BidPriceAsPercentageOfOnDemandPrice: Optional[NonNegativeDouble] = None
    Configurations: Optional[ConfigurationList] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None
    EbsBlockDevices: Optional[EbsBlockDeviceList] = None
    EbsOptimized: Optional[BooleanObject] = None
    InstanceType_1: Optional[InstanceType] = Field(None, alias='InstanceType')
    WeightedCapacity: Optional[WholeNumber] = None


class InstanceTypeSpecificationList(RootModel[List[InstanceTypeSpecification]]):
    root: List[InstanceTypeSpecification]


class JobFlowInstancesConfig(BaseModel):
    AdditionalMasterSecurityGroups: Optional[SecurityGroupsList] = None
    AdditionalSlaveSecurityGroups: Optional[SecurityGroupsList] = None
    Ec2KeyName: Optional[XmlStringMaxLen256] = None
    Ec2SubnetId: Optional[XmlStringMaxLen256] = None
    Ec2SubnetIds: Optional[XmlStringMaxLen256List] = None
    EmrManagedMasterSecurityGroup: Optional[XmlStringMaxLen256] = None
    EmrManagedSlaveSecurityGroup: Optional[XmlStringMaxLen256] = None
    HadoopVersion: Optional[XmlStringMaxLen256] = None
    InstanceCount: Optional[Integer] = None
    InstanceFleets: Optional[InstanceFleetConfigList] = None
    InstanceGroups: Optional[InstanceGroupConfigList] = None
    KeepJobFlowAliveWhenNoSteps: Optional[Boolean] = None
    MasterInstanceType: Optional[InstanceType] = None
    Placement: Optional[PlacementType] = None
    ServiceAccessSecurityGroup: Optional[XmlStringMaxLen256] = None
    SlaveInstanceType: Optional[InstanceType] = None
    TerminationProtected: Optional[Boolean] = None


class ListInstanceFleetsOutput(BaseModel):
    InstanceFleets: Optional[InstanceFleetList] = None
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ListInstanceGroupsOutput(BaseModel):
    InstanceGroups: Optional[InstanceGroupList] = None
    Marker_1: Optional[Marker] = Field(None, alias='Marker')


class ModifyInstanceGroupsInput(BaseModel):
    ClusterId_1: Optional[ClusterId] = Field(None, alias='ClusterId')
    InstanceGroups: Optional[InstanceGroupModifyConfigList] = None


class RunJobFlowInput(BaseModel):
    AdditionalInfo: Optional[XmlString] = None
    AmiVersion: Optional[XmlStringMaxLen256] = None
    Applications: Optional[ApplicationList] = None
    AutoScalingRole: Optional[XmlString] = None
    AutoTerminationPolicy_1: Optional[AutoTerminationPolicy] = Field(
        None, alias='AutoTerminationPolicy'
    )
    BootstrapActions: Optional[BootstrapActionConfigList] = None
    Configurations: Optional[ConfigurationList] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None
    EbsRootVolumeSize: Optional[Integer] = None
    Instances: JobFlowInstancesConfig
    JobFlowRole: Optional[XmlString] = None
    KerberosAttributes_1: Optional[KerberosAttributes] = Field(
        None, alias='KerberosAttributes'
    )
    LogEncryptionKmsKeyId: Optional[XmlString] = None
    LogUri: Optional[XmlString] = None
    ManagedScalingPolicy_1: Optional[ManagedScalingPolicy] = Field(
        None, alias='ManagedScalingPolicy'
    )
    Name: XmlStringMaxLen256
    NewSupportedProducts: Optional[NewSupportedProductsList] = None
    OSReleaseLabel: Optional[XmlStringMaxLen256] = None
    PlacementGroupConfigs: Optional[PlacementGroupConfigList] = None
    ReleaseLabel: Optional[XmlStringMaxLen256] = None
    RepoUpgradeOnBoot_1: Optional[RepoUpgradeOnBoot] = Field(
        None, alias='RepoUpgradeOnBoot'
    )
    ScaleDownBehavior_1: Optional[ScaleDownBehavior] = Field(
        None, alias='ScaleDownBehavior'
    )
    SecurityConfiguration: Optional[XmlString] = None
    ServiceRole: Optional[XmlString] = None
    StepConcurrencyLevel: Optional[Integer] = None
    Steps: Optional[StepConfigList] = None
    SupportedProducts: Optional[SupportedProductsList] = None
    Tags: Optional[TagList] = None
    VisibleToAllUsers: Optional[Boolean] = None


AddInstanceFleetInput.model_rebuild()
AddInstanceGroupsInput.model_rebuild()
Cluster.model_rebuild()
Configuration.model_rebuild()
InstanceFleet.model_rebuild()
InstanceFleetConfig.model_rebuild()
